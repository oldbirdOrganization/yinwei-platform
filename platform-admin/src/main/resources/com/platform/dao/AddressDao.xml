<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.AddressDao">

    <resultMap type="com.platform.entity.AddressEntity" id="addressMap">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="contactName" column="contact_name"/>
        <result property="contactMobile" column="contact_mobile"/>
        <result property="address" column="address"/>
        <result property="isDefault" column="is_default"/>
    </resultMap>

    <select id="queryObject" resultType="com.platform.entity.AddressEntity">
		select
        nideshop_address.id,
        nideshop_address.user_id,
        nideshop_address.contact_name,
        nideshop_address.contact_mobile,
        nideshop_address.address,
        nideshop_user.username shop_user_name
        from nideshop_address LEFT JOIN nideshop_user
        ON nideshop_address.user_id = nideshop_user.id
		where nideshop_address.id = #{id}
	</select>

    <select id="queryList" resultType="com.platform.entity.AddressEntity">
        select
        nideshop_address.id,
        nideshop_address.user_id,
        nideshop_address.contact_name,
        nideshop_address.contact_mobile,
        nideshop_address.address,
        nideshop_user.username shop_user_name
        from nideshop_address LEFT JOIN nideshop_user ON nideshop_address.user_id = nideshop_user.id
        WHERE 1=1
        <if test="contactName != null and contactName != ''">
            AND nideshop_address.contact_name LIKE concat('%', #{contactName},'%')
        </if>
        <if test="contactMobile != null and contactMobile != ''">
            AND nideshop_address.contact_mobile LIKE concat('%', #{contactMobile},'%')
        </if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from nideshop_address
        WHERE 1=1
        <if test="contactName != null and contactName != ''">
            AND nideshop_address.contact_name LIKE concat('%', #{contactName},'%')
        </if>
        <if test="contactMobile != null and contactMobile != ''">
            AND nideshop_address.contact_obile LIKE concat('%', #{contactMobile},'%')
        </if>
    </select>

    <insert id="save" parameterType="com.platform.entity.AddressEntity" useGeneratedKeys="true" keyProperty="id">
		insert into nideshop_address(
			`user_id`,
			`contact_name`,
			`contact_mobile`,
			`address`)
		values(
			#{userId},
			#{contactName},
			#{contactMobile},
			#{address})
	</insert>

    <update id="update" parameterType="com.platform.entity.AddressEntity">
        update nideshop_address
        <set>
            <if test="userId != null">`user_id` = #{userId}, </if>
            <if test="contactName != null">`contact_name` = #{contactName}, </if>
            <if test="contactMobile != null">`contact_mobile` = #{contactMobile}, </if>
            <if test="address != null">`address` = #{address}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
		delete from nideshop_address where id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from nideshop_address where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>